------------------ Git e GitHub --------------------

GitHub - Onde o código vai ser armazenado através de repositórios

Git - Ferramenta onde fazemos o versionamento dos códigos que são armazenados no github

----------------- Protocolo SSH ------------------

Quando vamos fazer a conexão do nosso repositório local com o remoto, é recomendado usar o protocolo SSH ao invés do HTTPS, que é o que vem padrão no github

----------------- Git Remote ---------------------

O git remote é usado para criar um link entre o seu projeto local com o repositório remoto, porém existem algumas variaveis nesse comando, como:

"git remote -v" - Usado para listar os repositórios remotos que estão relacionados a esse projeto. A resposta desse comando será:
origin   https://github.com/renanlazoti/secret-number.git (fetch)
origin   https://github.com/renanlazoti/secret-number.git (push)

Pois o git separa a url do envio de commits (push) e a url de baixar commits (fetch)

"git remote remove origin" - Para desvincular o projeto local com remoto

"git remote set-url origin https://github.com/renanlazoti/secret-number.git" - Para alterar uma URL, caso tenha algum erro de digitação na hora de vincular ou algo do tipo.

"git remote rename origin novo-origin" - Para renomear o repositório

------------------- Git Status -------------------

O comando "git status" é usado para verificar o status do seu projeto local com o remoto, então irá aparecer alterações realizadas que não foram enviadas, commits etc.

------------------- Git Log ----------------------

Exibe um histórico de commits, identificando a mensagem que foi colocada no commit, o usuário que fez, a data e a branch em que foi feito.

------------------- Modificações em arquivos que tem link com git ----------------------

Quando criamos esse link do nosso projeto local com o remoto, ao fazer alguma alteração ou adicionar algum arquivo, o git nos sinaliza através de letras ao lado do arquivo na barra
de navegação para termos uma noção da situação dele. Sendo elas:

M: A letra M representa o estado Modified, do português modificado. Isso significa que o arquivo já existia no repositório, mas que recebeu alguma modificação que ainda não foi registrada no Git.

U: A letra U representa o estado Untracked, do português não rastreado. Isso significa que o arquivo ainda não existia no repositório e que ainda não teve seu registro (commit) feito no Git.

------------------- Mensagem de commit -------------------

A mensagem do commit deve ser algo simples e objetivo, mas que possa ser compreendido por você ou uma outra pessoa no futuro. É comum que a mensagem do commit inicie com um verbo no
infinitivo que descreva a alteração feita, como “adicionar”, “corrigir” ou “atualizar”. Em sequência, são adicionados detalhes concisos da mudança. Por exemplo:
“Atualizar texto do título da página”.
Uma boa prática também e evitar detalhes técnicos, isso pode ser implementado na documentação do código ou em comentários de código.

------------------- Quando realizar um commit -------------

Um commit deve ser realizado sempre que você finalizar uma tarefa específica ou resolver algum bug. Isso mantém o histórico de commits claro e rastreável, de modo que seja possível
entender o que foi feito em cada commit.
Assim, é importante realizar commits frequentemente. Porém, evite realizar commits muito pequenos ou muito grandes, pois isso pode tornar difícil o seu entendimento.
Lembre-se de nunca realizar um commit de um código que você sabe que contém bugs. O ideal é que o commit contenha somente código funcional.

------------------- Git Clone -----------------------------

O git clone é usado para criar um clone de um repositório no seu computador, tornando um projeto local
Em caso de você ser um colaborador desse projeto, o comando git clone por si mesmo ja serve como um git remote, então você não precisará criar esse link entre o seu projeto e o
repositório clonado.

